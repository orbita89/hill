<?php


$a = 1234; // десятичное число
$b = 0123; // восьмеричное число (эквивалентно 83 в десятичной системе)
$c = 0o123; // восьмеричное число (начиная с PHP 8.1.0)
$d = 0x1A; // шестнадцатеричное число (эквивалентно 26 в десятичной системе)
$e = 0b111101111; // двоичное число (эквивалентно 255 в десятичной системе)
$f = 1_234_567; // десятичное число (с PHP 7.4.0)

echo $e;

//32 бит будет переход на Float
$large_number = 2147483647;
var_dump($large_number);                     // int(2147483647)

$large_number = 2147483648;
var_dump($large_number);

//то что будет больше 64 бит тто будет переход на Float
$million = 1000000;
$large_number =  50000000000000 * $million;
var_dump($large_number);

var_dump(intdiv(7 , 4));

//Если мы указали тип инт, то оно будет преобразованною в int хоть будет предупреждение. Устарело: неявное преобразование из Float 1.2 в int теряет точность
function test(): int
{
    return 1.2;
}
$testTypeIntByFloat = (int)1.2;

//преобразование из строки в число
$testTypeIntBySting = '12';

//преобразование null
$testTypeIntByNull = null;

var_dump((float)$testTypeIntByNull);
