<?php

//var_dump(0 == "a");
//var_dump("1" == "01");
//var_dump("10" == "1e1");
//var_dump(100 == "1e2");
//
////просто вариант тернарный оператор
//
//$exp1 = null;
//$exp2 = 2;
//$exp3 = 3;
//$exp4 = 4;
//
//$exp4_condition = ($exp4 % 2 == 0);
//
////после не удачного первого условия переходит на 2
//$result = (($exp1) ? $exp2 : ($exp2 === 2)) ? $exp3 : 'false';
//
////более сложный пример.
////1)шиг 1 первом условием происходит тоже самое что и первом примере (($exp1) ? $exp2 : ($exp2 === 2))
////2)шаг 2 если первое условие false то результат будет  : 'false'
////3)шаг-3 ($exp3 + ($exp4_condition ? $exp4 : 0)) это условие будет выполнять если первое условие TRY в нем мы уже выполняем условия каторге хранятся внутри него
//$result1 = (($exp1) ? $exp2 : ($exp2 === 2)) ? ($exp3 + ($exp4_condition ? $exp4 : 0)) : 'false';
//
//var_dump($result1);
//var_dump($result); //ответ $exp3

//операторы исполнения для выполнения команд(console) в скрипте
//$files = `dir`;
//echo $files;

//оператор отрицание

$test = '1';
if (!empty($test)) {
    echo '1';
}


$a = true;
$b = false;

$result1 = $a xor $b; // Результат: true, так как только одно из выражений истинно
$result2 = $a xor $a; // Результат: false, так как оба выражения истинны
$result3 = $b xor $b; // Результат: false, так как оба выражения ложны

echo "Результат 1: " . ($result1 ? 'true' : 'false') . PHP_EOL;
echo "Результат 2: " . ($result2 ? 'true' : 'false') . PHP_EOL;
echo "Результат 3: " . ($result3 ? 'true' : 'false') . PHP_EOL;

//объединение

$a = array("a" => "яблоко", "b" => "банан");
$b = array("a" => "груша", "b" => "клубника", "c" => "вишня");

$c = $a + $b; // Объединение $a и $b
echo "Объединение \$a и \$b: \n";
var_dump($c);

$c = $b + $a; // Объединение $b и $a
echo "Объединение \$b и \$a: \n";
var_dump($c);

$a += $b; // Объединение $a += $b — это $a и $b
echo "Объединение \$a += \$b: \n";
var_dump($a);

//match

